name: CI/CD - Build, Push to ACR and Deploy to AKS

on:
  push:
    branches:
      - main   # change if your default branch is different

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # --- CI: Build & Push ---
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Login to ACR
      run: az acr login --name nextrowdevcr

    - name: Build and Push image
      run: |
        IMAGE_TAG=v${{ github.run_number }}
        IMAGE_NAME=nextrowdevcr.azurecr.io/dev/webscrapper:$IMAGE_TAG

        echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV

        docker build -t $IMAGE_NAME .
        docker push $IMAGE_NAME

    # --- CD: Deploy to AKS ---
    - name: Set AKS context
      uses: azure/aks-set-context@v3
      with:
        resource-group: ${{ secrets.AKS_RESOURCE_GROUP }}
        cluster-name: ${{ secrets.AKS_CLUSTER_NAME }}

    - name: Install kubelogin
      run: az aks install-cli

    - name: Authenticate with Service Principal (kubelogin)
      run: |
        kubelogin convert-kubeconfig -l spn \
          --client-id ${{ secrets.AZURE_CLIENT_ID }} \
          --client-secret ${{ secrets.AZURE_CLIENT_SECRET }} \
          --tenant-id ${{ secrets.AZURE_TENANT_ID }}

    - name: Deploy to AKS (dev namespace)
      run: |
        kubectl create namespace dev --dry-run=client -o yaml | kubectl apply -f -

        kubectl create deployment webscrapperapp \
          --image=$IMAGE_NAME --replicas=1 -n dev --dry-run=client -o yaml | kubectl apply -f -

        kubectl expose deployment webscrapperapp \
          --type=LoadBalancer --port=80 --target-port=9090 -n dev --dry-run=client -o yaml | kubectl apply -f -

        kubectl rollout status deployment/webscrapperapp -n dev

    - name: Get Service External IP
      run: |
        echo "Waiting for External IP..."
        for i in {1..10}; do
          EXTERNAL_IP=$(kubectl get svc webscrapperapp -n dev --output=jsonpath='{.status.loadBalancer.ingress[0].ip}')
          if [ -n "$EXTERNAL_IP" ]; then
            echo "✅ External IP assigned: http://$EXTERNAL_IP"
            exit 0
          fi
          echo "Still waiting... retry $i/10"
          sleep 15
        done
        echo "⚠️ External IP not ready yet. Run 'kubectl get svc webscrapperapp -n dev' manually."
        exit 1
